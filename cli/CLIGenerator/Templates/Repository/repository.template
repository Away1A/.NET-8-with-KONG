// <copyright file="{{Name}}Repository.cs" company="CV Garuda Infinity Kreasindo">
// Copyright (c) CV Garuda Infinity Kreasindo. All rights reserved.
// </copyright>

using Garuda.Domain.{{Module}}.Models;
using Garuda.Persistences.Framework;
using Garuda.Repository.{{Module}}.Helper;
using Garuda.Repository.{{Module}}.Repositories.Contracts;
using Microsoft.EntityFrameworkCore;

#pragma warning disable CS8603 // Possible null reference return.

namespace Garuda.Repository.{{Module}}.Repositories;

public class {{Name}}Repository : RepositoryBase<{{Name}}>, I{{Name}}Repository
{
    public IQueryable<{{Name}}> Query()
    {
        return this.dbSet;
    }

    public async Task<{{Name}}> Get(Guid id)
    {
        return await this.dbSet.FirstOrDefaultAsync(x => x.Id == id);
    }

    public async Task<List<{{Name}}>> GetAll()
    {
        return await this.dbSet.ToListAsync();
    }

    public async Task<{{Name}}> Create({{Name}} model)
    {
        await this.dbSet.AddAsync(model);
        return model;
    }

    public async Task<{{Name}}> Update(Guid id, {{Name}} model)
    {
        var {{name}} = await this.dbSet.FirstOrDefaultAsync(x => x.Id == id);
        this.dbSet.Update({{name}});
        return {{name}};
    }

    public async Task<{{Name}}> Delete(Guid id)
    {
        var {{name}} = await this.dbSet.FirstOrDefaultAsync(x => x.Id == id);
        this.dbSet.Remove({{name}});
        return {{name}};
    }
}